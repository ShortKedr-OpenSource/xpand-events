<#@ template debug="false" language="C#" #>
<#@ import namespace="System.Text" #>
<#@ output extension=".cs" encoding="utf-8" #>
<#@ include file="Includes/Operations.ttinclude"#>
<#@ include file="Includes/EventGenerationConfig.ttinclude"#>
using System;

namespace Xpand.Events { 

<#
    for (int i = 0; i <= EventMaxParamCount; i++) {
#>
    public class XSafeEvent<#= BuildTemplateDefinitionParams(i) #> : BaseEvent<Event<#= BuildTemplateDefinitionParams(i) #>> {

        public void Invoke(<#= BuildTemplateMethodParams(i) #>){
            if (IsSuspended) return;
            PrepareInvoke();
            for (int i = 0; i < _subscriptions.Count; i++) {
                try {
                    _subscriptions[i].Invoke(<#= BuildTemplateUseParams(i) #>);
                } catch(Exception e){
                    XEventLogger.LogException(e);
                } 
            }
        }

    }

<#
    }
#>

}